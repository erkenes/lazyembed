{"version":3,"sources":["lazyembed.js"],"names":["LazyEmbed","options","setOptions","init","prototype","defaults","elements","overlayText","overlayBackground","overlayColor","adoptResponsiveEmbed","excludeElements","classes","root","overlay","text","placeholder","embed","onClick","onLoad","onInit","key","embeds","document","querySelectorAll","i","length","parent","parentElement","embedResponsivePattern","embedResponsiveItemPattern","clonedEmbed","cloneNode","className","wrapper","createElement","match","image","hasAttribute","style","backgroundImage","getAttribute","backgroundColor","addEventListener","display","setAttribute","color","innerHTML","appendChild","overlayExcludes","u","e","stopPropagation","parentNode","replaceChild"],"mappings":"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","file":"lazyembed.js","sourcesContent":["const LazyEmbed = function(options) {\n    this.setOptions(options);\n    this.init();\n};\n\nLazyEmbed.prototype = {\n    defaults: {\n        elements: '[data-lazyembed]',\n        overlayText: 'Click to load',\n        overlayBackground: 'rgba(0, 0, 0, .6)',\n        overlayColor: '#fff',\n        adoptResponsiveEmbed: true,\n        excludeElements: 'a',\n        classes: {\n            root: 'lazyembed',\n            overlay: 'lazyembed__overlay',\n            text: 'lazyembed__text',\n            placeholder: 'lazyembed__placeholder',\n            embed: 'lazyembed__embed'\n        },\n        onClick: function() {\n        },\n        onLoad: function() {\n        },\n        onInit: function() {\n        },\n    },\n\n    setOptions: function(options) {\n        this.options = options || {};\n        for (var key in this.defaults) {\n            if (!this.options[key]) {\n                this.options[key] = this.defaults[key];\n            }\n        }\n    },\n\n    init: function() {\n        var options = this.options;\n\n        var embeds;\n        if (typeof options.elements === 'string') {\n            embeds = document.querySelectorAll(options.elements);\n        } else {\n            embeds = options.elements;\n        }\n\n        for (var i = 0; i < embeds.length; i++) {\n            (function() {\n                var embed = embeds[i];\n                var parent = embed.parentElement;\n                var embedResponsivePattern = /(?:\\s|^)embed-responsive(?:\\s|$)/;\n                var embedResponsiveItemPattern = /(?:\\s|^)embed-responsive-item(?:\\s|$)/;\n\n                var clonedEmbed = embed.cloneNode(true);\n                clonedEmbed.className += options.classes.embed;\n\n                var wrapper = document.createElement('div');\n                wrapper.className = options.classes.root;\n                if (options.adoptResponsiveEmbed && (parent.className.match(\n                    embedResponsivePattern) !== null || clonedEmbed.className.match(\n                    embedResponsiveItemPattern) !== null)) {\n                    wrapper.className += ' embed-responsive-item';\n                }\n\n                var image;\n                if (clonedEmbed.hasAttribute('data-placeholder')) {\n                    image = document.createElement('div');\n                    image.className = options.classes.placeholder;\n                    image.style.backgroundImage = 'url(' + clonedEmbed.getAttribute('data-placeholder') + ')';\n                }\n\n                var overlay = document.createElement('div');\n                overlay.className = options.classes.overlay;\n                overlay.style.backgroundColor = options.overlayBackground;\n                overlay.addEventListener('click', function() {\n                    overlay.style.display = 'none';\n                    if (image) {\n                        image.style.display = 'none';\n                    }\n\n                    if (clonedEmbed.hasAttribute('data-src')) {\n                        clonedEmbed.addEventListener('load', function() {\n                            options.onLoad(clonedEmbed);\n                        }, false);\n                        clonedEmbed.setAttribute('src', clonedEmbed.getAttribute('data-src'));\n                    }\n\n                    options.onClick(clonedEmbed);\n                }, false);\n\n                var overlayText = document.createElement('div');\n                overlayText.className = options.classes.text;\n                overlayText.style.color = options.overlayColor;\n                overlayText.innerHTML = options.overlayText;\n\n                overlay.appendChild(overlayText);\n\n                var overlayExcludes = overlay.querySelectorAll(options.excludeElements);\n                for (var u = 0; u < overlayExcludes.length; u++) {\n                    overlayExcludes[u].addEventListener('click', function(e) {\n                        e.stopPropagation();\n                    }, false);\n                }\n\n                wrapper.appendChild(clonedEmbed);\n                if (image) {\n                    wrapper.appendChild(image);\n                }\n                wrapper.appendChild(overlay);\n\n                embed.parentNode.replaceChild(wrapper, embed);\n\n                options.onInit(wrapper);\n            })();\n        }\n    },\n};\n\nexport default LazyEmbed;\n\n"]}