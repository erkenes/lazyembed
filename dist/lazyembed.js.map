{"version":3,"sources":["lazyembed.js"],"names":["LazyEmbed","DEFAULTS","elements","overlayText","adoptResponsiveEmbed","excludeElements","includeElements","classes","root","overlay","text","placeholder","embed","onClick","onLoad","onInit","EMBED_RESPONSIVE_PATTERN","EMBED_RESPONSIVE_ITEM_PATTERN","extend","target","source","key","hasOwnProperty","Object","prototype","toString","call","options","setOptions","init","defaults","embeds","document","querySelectorAll","i","parent","parentElement","clonedEmbed","cloneNode","className","wrapper","createElement","match","image","hasAttribute","style","backgroundImage","getAttribute","overlayBackground","background","addEventListener","display","once","setAttribute","overlayColor","color","innerHTML","appendChild","overlayExcludes","u","length","e","matches","stopPropagation","parentNode","replaceChild"],"mappings":"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","file":"lazyembed.js","sourcesContent":["const LazyEmbed = (() => {\r\n    const DEFAULTS = {\r\n        elements: '[data-lazyembed]',\r\n        overlayText: 'Click to load',\r\n        // !!! DEPRECATED !!! overlayBackground: 'rgba(0, 0, 0, .6)',\r\n        // !!! DEPRECATED !!! overlayColor: '#fff',\r\n        adoptResponsiveEmbed: true,\r\n        excludeElements: 'a',\r\n        includeElements: null,\r\n        classes: {\r\n            root: 'lazyembed',\r\n            overlay: 'lazyembed__overlay',\r\n            text: 'lazyembed__text',\r\n            placeholder: 'lazyembed__placeholder',\r\n            embed: 'lazyembed__embed',\r\n        },\r\n        onClick: () => {\r\n        },\r\n        onLoad: () => {\r\n        },\r\n        onInit: () => {\r\n        },\r\n    };\r\n    const EMBED_RESPONSIVE_PATTERN = /(?:\\s|^)embed-responsive(?:\\s|$)/;\r\n    const EMBED_RESPONSIVE_ITEM_PATTERN = /(?:\\s|^)embed-responsive-item(?:\\s|$)/;\r\n\r\n    const extend = (target, source) => {\r\n        for (let key in source) {\r\n            if (source.hasOwnProperty(key)) {\r\n                if (Object.prototype.toString.call(source[key]) === '[object Object]') {\r\n                    if (Object.prototype.toString.call(target[key]) !== '[object Object]') {\r\n                        target[key] = {};\r\n                    }\r\n\r\n                    extend(target[key], source[key]);\r\n                } else {\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return target;\r\n    };\r\n\r\n    class LazyEmbed\r\n    {\r\n        static get defaults()\r\n        {\r\n            return DEFAULTS;\r\n        }\r\n\r\n        constructor(options = {})\r\n        {\r\n            this.setOptions(options);\r\n            this.init();\r\n        }\r\n\r\n        setOptions(options)\r\n        {\r\n            this.options = {};\r\n            extend(this.options, LazyEmbed.defaults);\r\n            extend(this.options, options);\r\n        }\r\n\r\n        init()\r\n        {\r\n            let embeds;\r\n            if (typeof this.options.elements === 'string') {\r\n                embeds = document.querySelectorAll(this.options.elements);\r\n            } else {\r\n                embeds = this.options.elements;\r\n            }\r\n\r\n            for (let i = 0; i < embeds.length; i++) {\r\n                const embed = embeds[i];\r\n                const parent = embed.parentElement;\r\n\r\n                const clonedEmbed = embed.cloneNode(true);\r\n                clonedEmbed.className += ' ' + this.options.classes.embed;\r\n\r\n                const wrapper = document.createElement('div');\r\n                wrapper.className = this.options.classes.root;\r\n                if (this.options.adoptResponsiveEmbed && (parent.className.match(\r\n                    EMBED_RESPONSIVE_PATTERN) !== null || clonedEmbed.className.match(\r\n                    EMBED_RESPONSIVE_ITEM_PATTERN) !== null)) {\r\n                    wrapper.className += ' embed-responsive-item';\r\n                }\r\n\r\n                let image;\r\n                if (clonedEmbed.hasAttribute('data-placeholder')) {\r\n                    image = document.createElement('div');\r\n                    image.className = this.options.classes.placeholder;\r\n                    image.style.backgroundImage = 'url(' + clonedEmbed.getAttribute('data-placeholder') + ')';\r\n                }\r\n\r\n                const overlay = document.createElement('div');\r\n                overlay.className = this.options.classes.overlay;\r\n                if (typeof this.options.overlayBackground !== 'undefined') {\r\n                    overlay.style.background = this.options.overlayBackground;\r\n                }\r\n                overlay.addEventListener('click', () => {\r\n                    overlay.style.display = 'none';\r\n                    if (image) {\r\n                        image.style.display = 'none';\r\n                    }\r\n\r\n                    if (clonedEmbed.hasAttribute('data-src')) {\r\n                        clonedEmbed.addEventListener('load', () => {\r\n                            this.options.onLoad(clonedEmbed);\r\n                        }, {\r\n                            once: true\r\n                        }, false);\r\n                        clonedEmbed.setAttribute('src', clonedEmbed.getAttribute('data-src'));\r\n                    }\r\n\r\n                    this.options.onClick(clonedEmbed);\r\n                }, false);\r\n\r\n                const overlayText = document.createElement('div');\r\n                overlayText.className = this.options.classes.text;\r\n                if (typeof this.options.overlayColor !== 'undefined') {\r\n                    overlayText.style.color = this.options.overlayColor;\r\n                }\r\n                overlayText.innerHTML = this.options.overlayText;\r\n\r\n                overlay.appendChild(overlayText);\r\n\r\n                const overlayExcludes = overlay.querySelectorAll(this.options.excludeElements);\r\n                for (let u = 0; u < overlayExcludes.length; u++) {\r\n                    overlayExcludes[u].addEventListener('click', e => {\r\n                        if (this.options.includeElements) {\r\n                            if (e.target.matches(this.options.includeElements)) {\r\n                                return ;\r\n                            }\r\n                        }\r\n\r\n                        e.stopPropagation();\r\n                    }, false);\r\n                }\r\n\r\n                wrapper.appendChild(clonedEmbed);\r\n                if (image) {\r\n                    wrapper.appendChild(image);\r\n                }\r\n                wrapper.appendChild(overlay);\r\n\r\n                embed.parentNode.replaceChild(wrapper, embed);\r\n\r\n                this.options.onInit(wrapper);\r\n            }\r\n        }\r\n    }\r\n\r\n    return LazyEmbed;\r\n})();\r\n\r\nexport default LazyEmbed;\r\n"]}